[ -n "$_record_" ] && return
_record_=1

record_block(){
  address=$1
  [ -d "$blkdir" ] || { echo no blkdir ; exit 1 ; }
  touch $blkdir/$address
  log recording block $address
}

# addr: ip address
# tag: for not unique entry eg sshpid, or empty: a unique tag will be generated
record_noted(){
  address=$1
  tag=$2
  dir=$dbdir/noted/$address
  [ -d $dir ] || mkdir -p $dir
  while [ -z "$tag" ]
  do
    tst=r$RANDOM
    [ -f $dir/$tst ] && tag=$tst
  done
  touch $dir/$tag
  log recording $address $tag
}

mark_blocked(){
  address=$1
  [ -z "$address" ] && { log empty address ; exit 1 ; }
  [ -d "$ntdir/$address" ] || { log no $ntdir/$address ; exit 1 ; }
  rm -r $ntdir/$address || log "rm $address failed"
  log rm $ntdir/$address
}

# $1: time in seconds, return names of files that are older
blocked_before(){
  time=$1
  bb=
  for b in $blkdir/*
  do
    if [ $(stat --printf=%Y $b) -lt $time ]
    then
      bb="$bb ${b##*/}"
    fi
  done
  echo $bb
}

# $1: address, return time of block
block_time(){
  address=$1
  if [ -f $blkdir/$address ]
  then
    stat --printf=%Y $blkdir/$address
  fi
}

remove_blocked(){
  address=$1
  [ -z "$address" ] && { log empty address ; exit 1 ; }
  [ -f "$blkdir/$address" ] || { log no $blkdir/$address ; exit 1 ; }
  if rm $blkdir/$address
  then
    log rm $blkdir/$address
  else
    log "rm $address failed"
  fi
}
